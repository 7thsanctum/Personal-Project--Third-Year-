//
// FX Version: fx_5_0
//
// 2 local buffer(s)
//
cbuffer cbPerFrame
{
    float3  gEyePosW;                   // Offset:    0, size:   12
    float3  gEmitPosW;                  // Offset:   16, size:   12
    float3  gEmitDirW;                  // Offset:   32, size:   12
    float   gGameTime;                  // Offset:   44, size:    4
    float   gTimeStep;                  // Offset:   48, size:    4
    float4x4 gViewProj;                 // Offset:   64, size:   64
}

cbuffer cbFixed
{
    float3  gAccelW = { -1, -9.80000019, 0 };// Offset:    0, size:   12
}

//
// 6 local object(s)
//
Texture2DArray gTexArray;
Texture1D gRandomTex;
SamplerState samLinear
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
DepthStencilState DisableDepth
{
    DepthEnable = bool(FALSE /* 0 */);
    DepthWriteMask = uint(ZERO /* 0 */);
};
DepthStencilState NoDepthWrites
{
    DepthEnable = bool(TRUE /* 1 */);
    DepthWriteMask = uint(ZERO /* 0 */);
};
GeometryShader gsStreamOut = 
    asm {
        //
        // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
        //
        //
        // Buffer Definitions: 
        //
        // cbuffer cbPerFrame
        // {
        //
        //   float3 gEyePosW;                   // Offset:    0 Size:    12 [unused]
        //   float3 gEmitPosW;                  // Offset:   16 Size:    12
        //   float3 gEmitDirW;                  // Offset:   32 Size:    12 [unused]
        //   float gGameTime;                   // Offset:   44 Size:     4
        //   float gTimeStep;                   // Offset:   48 Size:     4
        //   float4x4 gViewProj;                // Offset:   64 Size:    64 [unused]
        //
        // }
        //
        //
        // Resource Bindings:
        //
        // Name                                 Type  Format         Dim Slot Elements
        // ------------------------------ ---------- ------- ----------- ---- --------
        // samLinear                         sampler      NA          NA    0        1
        // gRandomTex                        texture  float4          1d    0        1
        // cbPerFrame                        cbuffer      NA          NA    0        1
        //
        //
        //
        // Input signature:
        //
        // Name                 Index   Mask Register SysValue Format   Used
        // -------------------- ----- ------ -------- -------- ------ ------
        // POSITION                 0   xyz         0     NONE  float   xyz 
        // VELOCITY                 0   xyz         1     NONE  float   xyz 
        // SIZE                     0   xy          2     NONE  float   xy  
        // AGE                      0     z         2     NONE  float     z 
        // TYPE                     0   x           3     NONE   uint   x   
        //
        //
        // Output signature:
        //
        // Name                 Index   Mask Register SysValue Format   Used
        // -------------------- ----- ------ -------- -------- ------ ------
        // m0:POSITION              0   xyz         0     NONE  float   xyz 
        // m0:VELOCITY              0   xyz         1     NONE  float   xyz 
        // m0:SIZE                  0   xy          2     NONE  float   xy  
        // m0:AGE                   0     z         2     NONE  float     z 
        // m0:TYPE                  0   x           3     NONE   uint   x   
        //
        gs_5_0
        dcl_globalFlags refactoringAllowed
        dcl_constantbuffer cb0[4], immediateIndexed
        dcl_sampler s0, mode_default
        dcl_resource_texture1d (float,float,float,float) t0
        dcl_input v[1][0].xyz
        dcl_input v[1][1].xyz
        dcl_input v[1][2].xy
        dcl_input v[1][2].z
        dcl_input v[1][3].x
        dcl_temps 4
        dcl_inputprimitive point 
        dcl_stream m0
        dcl_outputtopology pointlist 
        dcl_output o0.xyz
        dcl_output o1.xyz
        dcl_output o2.xy
        dcl_output o2.z
        dcl_output o3.x
        dcl_maxout 6
        
        #line 113 "C:\Users\Mark\Documents\C++ Code\Chapter 20 Particle Systems (Colourful) - Copy\ParticleSystem\FX\Rain.fx"
        add r0.x, cb0[3].x, v[0][2].z  // gin<8:Inf>
        if_z v[0][3].x
        
        #line 118
          lt r0.y, l(0.002000), r0.x
          if_nz r0.y
            mov r0.y, l(0)  // i<0: 0>
            mov r0.z, r0.y  // i<0>
            loop 
              ilt r0.w, r0.z, l(5)
              breakc_z r0.w
        
        #line 123
              nop 
              itof r0.w, r0.z
              div r0.w, r0.w, l(5.000000)  // offset<0:[-4.29497e+008f,4.29497e+008f]>
        
        #line 75
              add r0.w, r0.w, cb0[2].w  // u<0>
        
        #line 78
              sample_l_indexable(texture1d)(float,float,float,float) r1.xy, r0.w, t0.xzyw, s0, l(0.000000)
              mov r1.xy, r1.xyxx  // v<0:Inf,2:Inf>
              mov r1.xy, r1.xyxx  // RandVec3<0:Inf,2:Inf>
        
        #line 123
              mul r1.xz, r1.xxyx, l(35.000000, 0.000000, 35.000000, 0.000000)  // vRandom<0:Inf,2:Inf>
              mov r1.y, l(20.000000)  // vRandom<1: 20f>
        
        #line 127
              add r1.xyz, r1.xyzx, cb0[1].xyzx  // p<0:Inf,1,2:Inf>
              mov r2.xyz, l(0,0,0,0)  // p<3: 0f,4: 0f,5: 0f>
              mov r3.xy, l(1.000000,1.000000,0,0)  // p<6: 1f,7: 1f>
              mov r0.w, l(1)  // p<9: 1u>
              mov o0.xyz, r1.xyzx  // ptStream<0,0,0>
              mov o1.xyz, r2.xyzx  // ptStream<0,0,0>
              mov o2.xy, r3.xyxx  // ptStream<0,0>
              mov o2.z, r0.y  // ptStream<0>
              mov o3.x, r0.w  // ptStream<0>
              emit_stream m0
        
        #line 120
              iadd r0.z, r0.z, l(1)  // i<0>
            endloop 
            mov r0.x, l(0)  // gin<8: 0f>
          endif 
        
        #line 141
          mov o0.xyz, v[0][0].xyzx  // ptStream<0,0,0>
          mov o1.xyz, v[0][1].xyzx  // ptStream<0,0,0>
          mov o2.xy, v[0][2].xyxx  // ptStream<0,0>
          mov o2.z, r0.x  // ptStream<0>
          mov o3.x, v[0][3].x  // ptStream<0>
          emit_stream m0
        
        #line 115
        else 
        
        #line 146
          ge r0.y, l(3.000000), r0.x
          if_nz r0.y
            mov o0.xyz, v[0][0].xyzx  // ptStream<0,0,0>
            mov o1.xyz, v[0][1].xyzx  // ptStream<0,0,0>
            mov o2.xy, v[0][2].xyxx  // ptStream<0,0>
            mov o2.z, r0.x  // ptStream<0>
            mov o3.x, v[0][3].x  // ptStream<0>
            emit_stream m0
          endif 
        
        #line 115
        endif 
        
        #line 110
        ret 
        // Approximately 50 instruction slots used
            
    }
/* Stream out decl: "POSITION.xyz; VELOCITY.xyz; SIZE.xy; AGE.x; TYPE.x" */;

//
// 1 groups(s)
//
fxgroup
{
    //
    // 2 technique(s)
    //
    technique11 StreamOutTech
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // VELOCITY                 0   xyz         1     NONE  float   xyz 
                // SIZE                     0   xy          2     NONE  float   xy  
                // AGE                      0   x           3     NONE  float   x   
                // TYPE                     0   x           4     NONE   uint   x   
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // VELOCITY                 0   xyz         1     NONE  float   xyz 
                // SIZE                     0   xy          2     NONE  float   xy  
                // AGE                      0     z         2     NONE  float     z 
                // TYPE                     0   x           3     NONE   uint   x   
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.x
                dcl_input v4.x
                dcl_output o0.xyz
                dcl_output o1.xyz
                dcl_output o2.xy
                dcl_output o2.z
                dcl_output o3.x
                
                #line 101 "C:\Users\Mark\Documents\C++ Code\Chapter 20 Particle Systems (Colourful) - Copy\ParticleSystem\FX\Rain.fx"
                mov o0.xyz, v0.xyzx  // StreamOutVS<0,1,2>
                mov o1.xyz, v1.xyzx  // StreamOutVS<3,4,5>
                mov o2.xy, v2.xyxx  // StreamOutVS<6,7>
                mov o2.z, v3.x  // StreamOutVS<8>
                mov o3.x, v4.x  // StreamOutVS<9>
                ret 
                // Approximately 6 instruction slots used
                            
            };
            GeometryShader = gsStreamOut;
            PixelShader = NULL;
            DS_StencilRef = uint(0);
            DepthStencilState = DisableDepth;
        }

    }

    technique11 DrawTech
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbFixed
                // {
                //
                //   float3 gAccelW;                    // Offset:    0 Size:    12
                //      = 0xbf800000 0xc11ccccd 0x00000000 
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbFixed                           cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // VELOCITY                 0   xyz         1     NONE  float   xyz 
                // SIZE                     0   xy          2     NONE  float       
                // AGE                      0   x           3     NONE  float   x   
                // TYPE                     0   x           4     NONE   uint   x   
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // TYPE                     0   x           1     NONE   uint   x   
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[1], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v3.x
                dcl_input v4.x
                dcl_output o0.xyz
                dcl_output o1.x
                dcl_temps 2
                
                #line 184 "C:\Users\Mark\Documents\C++ Code\Chapter 20 Particle Systems (Colourful) - Copy\ParticleSystem\FX\Rain.fx"
                mov r0.x, v3.x  // t<0>
                
                #line 187
                mul r0.y, r0.x, l(0.500000)
                mul r0.y, r0.x, r0.y
                mul r0.yzw, r0.yyyy, cb0[0].xxyz
                mul r1.xyz, r0.xxxx, v1.xyzx
                add r0.xyz, r0.yzwy, r1.xyzx
                add r0.xyz, r0.xyzx, v0.xyzx  // vout<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.w, v4.x  // vout<3>
                mov o0.xyz, r0.xyzx  // DrawVS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o1.x, r0.w  // DrawVS<3>
                ret 
                // Approximately 11 instruction slots used
                            
            };
            GeometryShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float3 gEyePosW;                   // Offset:    0 Size:    12 [unused]
                //   float3 gEmitPosW;                  // Offset:   16 Size:    12 [unused]
                //   float3 gEmitDirW;                  // Offset:   32 Size:    12 [unused]
                //   float gGameTime;                   // Offset:   44 Size:     4 [unused]
                //   float gTimeStep;                   // Offset:   48 Size:     4 [unused]
                //   float4x4 gViewProj;                // Offset:   64 Size:    64
                //
                // }
                //
                // cbuffer cbFixed
                // {
                //
                //   float3 gAccelW;                    // Offset:    0 Size:    12
                //      = 0xbf800000 0xc11ccccd 0x00000000 
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbFixed                           cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // TYPE                     0   x           1     NONE   uint   x   
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // m0:SV_Position           0   xyzw        0      POS  float   xyzw
                // m0:TEXCOORD              0   xy          1     NONE  float   xy  
                //
                gs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[8], immediateIndexed
                dcl_constantbuffer cb1[1], immediateIndexed
                dcl_input v[1][0].xyz
                dcl_input v[1][1].x
                dcl_temps 3
                dcl_inputprimitive point 
                dcl_stream m0
                dcl_outputtopology linestrip 
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xy
                dcl_maxout 2
                
                #line 206 "C:\Users\Mark\Documents\C++ Code\Chapter 20 Particle Systems (Colourful) - Copy\ParticleSystem\FX\Rain.fx"
                if_nz v[0][1].x
                
                #line 210
                  mul r0.xyz, cb1[0].xyzx, l(0.070000, 0.070000, 0.070000, 0.000000)
                  add r0.xyz, r0.xyzx, v[0][0].xyzx  // p1<0:Inf,1:Inf,2:Inf>
                
                #line 213
                  mov r1.xyz, v[0][0].xyzx
                  mov r1.w, l(1.000000)
                  dp4 r2.x, r1.xyzw, cb0[4].xyzw  // v0<0:NaN:Inf>
                  dp4 r2.y, r1.xyzw, cb0[5].xyzw  // v0<1:NaN:Inf>
                  dp4 r2.z, r1.xyzw, cb0[6].xyzw  // v0<2:NaN:Inf>
                  dp4 r2.w, r1.xyzw, cb0[7].xyzw  // v0<3:NaN:Inf>
                  mov r1.xy, l(0,0,0,0)  // v0<4: 0f,5: 0f>
                  mov o0.xyzw, r2.xyzw  // lineStream<0,0,0,0>
                  mov o1.xy, r1.xyxx  // lineStream<0,0>
                  emit_stream m0
                
                #line 218
                  mov r0.w, l(1.000000)
                  dp4 r1.x, r0.xyzw, cb0[4].xyzw  // v1<0:NaN:Inf>
                  dp4 r1.y, r0.xyzw, cb0[5].xyzw  // v1<1:NaN:Inf>
                  dp4 r1.z, r0.xyzw, cb0[6].xyzw  // v1<2:NaN:Inf>
                  dp4 r1.w, r0.xyzw, cb0[7].xyzw  // v1<3:NaN:Inf>
                  mov r0.xy, l(1.000000,1.000000,0,0)  // v1<4: 1f,5: 1f>
                  mov o0.xyzw, r1.xyzw  // lineStream<0,0,0,0>
                  mov o1.xy, r0.xyxx  // lineStream<0,0>
                  emit_stream m0
                
                #line 206
                endif 
                
                #line 202
                ret 
                // Approximately 24 instruction slots used
                            
            };
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gTexArray                         texture  float4     2darray    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Position              0   xyzw        0      POS  float       
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_sampler s0, mode_default
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_input_ps linear v1.xy
                dcl_output o0.xyzw
                dcl_temps 1
                
                #line 226 "C:\Users\Mark\Documents\C++ Code\Chapter 20 Particle Systems (Colourful) - Copy\ParticleSystem\FX\Rain.fx"
                mov r0.z, l(0)
                mov r0.xy, v1.xyxx
                sample_indexable(texture2darray)(float,float,float,float) o0.xyzw, r0.xyzx, t0.xyzw, s0  // DrawPS<0:Inf,1:Inf,2:Inf,3:Inf>
                ret 
                // Approximately 4 instruction slots used
                            
            };
            DS_StencilRef = uint(0);
            DepthStencilState = NoDepthWrites;
        }

    }

}

